CREATE TABLE if not exists genres (
                        genre_id int primary key ,
                        name varchar
);

CREATE TABLE if not exists mpa
(
    mpa_id int primary key ,
    name   varchar

);

CREATE TABLE if not exists status (
                        status_id int primary key ,
                        status varchar(15)
);

create table if not exists films (
                       id long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name CHARACTER VARYING(60) NOT NULL,
                       description varchar(200),
                       release_date timestamp,
                       duration int,
                       mpa_id int references MPA(mpa_id)
);

create table if not exists films_genres (
              film_id  long references films (id) on delete cascade ,
              genre_id int references genres (genre_id) on delete cascade
);

CREATE TABLE if not exists users (
                         id long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         email varchar NOT NULL,
                         login varchar NOT NULL,
                         name varchar,
                         birthday timestamp
);

create unique index USERS_LOGIN_UNQ
    on users (login);

create unique index USERS_EMAIL_UNQ
    on users (email);

create unique index FILMS_NAME_UNQ
    on films (name);


CREATE TABLE if not exists friendship (
                            user_id long references users(id),
                            friend_id long references users(id),
                            status_id int references status (status_id)
);

CREATE TABLE if not exists likes (
                       film_id long PRIMARY KEY,
                       user_id long,
                       constraint FILMS_KEY
                       foreign key (film_id) references films(id),
                       constraint USERS_KEY
                       foreign key (user_id) references users(id)
);